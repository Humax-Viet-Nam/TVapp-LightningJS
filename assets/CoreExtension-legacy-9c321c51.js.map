{"version":3,"file":"CoreExtension-legacy-9c321c51.js","sources":["../../node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/WebTrFontFace.js","../../node_modules/@lightningjs/renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TrFontFace } from './TrFontFace.js';\nexport class WebTrFontFace extends TrFontFace {\n    fontFace;\n    fontUrl;\n    constructor(fontFamily, descriptors, fontUrl) {\n        super(fontFamily, descriptors);\n        // Filter out parentheses from fontUrl\n        const fontUrlWithoutParentheses = fontUrl.replace(/\\(|\\)/g, '');\n        // Defaults for descriptors resolved in the super constructor\n        const determinedDescriptors = this.descriptors;\n        // Convert TrFontFaceDescriptors to CSS FontFaceDescriptors\n        const cssDescriptors = {\n            style: determinedDescriptors.style,\n            weight: typeof determinedDescriptors.weight === 'number'\n                ? `${determinedDescriptors.weight}`\n                : determinedDescriptors.weight,\n            stretch: determinedDescriptors.stretch,\n            unicodeRange: determinedDescriptors.unicodeRange,\n            variant: determinedDescriptors.variant,\n            featureSettings: determinedDescriptors.featureSettings,\n            display: determinedDescriptors.display,\n        };\n        const fontFace = new FontFace(fontFamily, `url(${fontUrlWithoutParentheses})`, cssDescriptors);\n        fontFace\n            .load()\n            .then(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.loaded = true;\n            this.emit('loaded');\n        })\n            .catch(console.error);\n        this.fontFace = fontFace;\n        this.fontUrl = fontUrl;\n    }\n}\n//# sourceMappingURL=WebTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["EventEmitter","_classCallCheck","this","_defineProperty","_createClass","key","value","event","listener","listeners","eventListeners","push","index","indexOf","splice","_this","on","onceListener","target","data","off","_this2","_toConsumableArray","forEach","exports","TrFontFace","_EventEmitter","_inherits","_super","_createSuper","fontFamily","descriptors","_this3","_assertThisInitialized","call","_objectSpread","style","weight","stretch","concat","unicodeRange","variant","featureSettings","display","_TrFontFace","WebTrFontFace","_super2","fontUrl","_this4","fontUrlWithoutParentheses","replace","determinedDescriptors","cssDescriptors","fontFace","FontFace","load","then","loaded","emit","catch","console","error","CoreExtension"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}